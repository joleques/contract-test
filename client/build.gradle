plugins {
	id 'org.springframework.boot' version '2.4.0-M2'
	id 'io.spring.dependency-management' version '1.0.10.RELEASE'
	id "au.com.dius.pact" version "4.0.3"
	id 'java'
}

group = 'com.contract.producer'
version = '0.0.1-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'au.com.dius.pact'

sourceCompatibility = '11'

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

jar {
    archiveBaseName = 'client-provider'
    archiveVersion =  '1.0.0'
}

test {
	useJUnitPlatform()
}

pact {
    serviceProviders {
        ClientProvider {
            protocol = 'http'
            host = 'localhost'
            port = 8091
            path = '/'

            // Test Pacts from local Miku
            //hasPactWith('Logistic - Base contract') {
                //pactSource = file("$rootDir/Pacts/Logistic/logistic-service-rule-client-provider.json")
            //}

            // Test Pacts from local Nanoha
            //hasPactWith('Finacial - With Nantionality') {
                //pactSource = file("$rootDir/Pacts/Finacial/finacial-service-rule-client-provider.json")
            //}

            //hasPactsWith('Logistic - All contracts') {
            //    pactFileLocation = file("$rootDir/Pacts/Logistic")
            //}

            // Test Pacts from Pact Broker
           // hasPactsFromPactBroker(mybrokerUrl, authentication: ['Basic', mybrokerUser, mybrokerPassword])

            // This is for local Pact Broker in Docker
            hasPactsFromPactBroker("http://localhost")

        }
    }
}